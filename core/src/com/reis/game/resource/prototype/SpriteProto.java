// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sprite.proto

package com.reis.game.resource.prototype;

public final class SpriteProto {
  private SpriteProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SpriteDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SpriteData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 x = 1;</code>
     */
    int getX();

    /**
     * <code>optional int32 y = 2;</code>
     */
    int getY();

    /**
     * <code>optional int32 textureX = 3;</code>
     */
    int getTextureX();

    /**
     * <code>optional int32 textureY = 4;</code>
     */
    int getTextureY();

    /**
     * <code>optional int32 width = 5;</code>
     */
    int getWidth();

    /**
     * <code>optional int32 height = 6;</code>
     */
    int getHeight();

    /**
     * <code>optional int32 anchorX = 7;</code>
     */
    int getAnchorX();

    /**
     * <code>optional int32 anchorY = 8;</code>
     */
    int getAnchorY();
  }
  /**
   * Protobuf type {@code SpriteData}
   */
  public  static final class SpriteData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SpriteData)
      SpriteDataOrBuilder {
    // Use SpriteData.newBuilder() to construct.
    private SpriteData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpriteData() {
      x_ = 0;
      y_ = 0;
      textureX_ = 0;
      textureY_ = 0;
      width_ = 0;
      height_ = 0;
      anchorX_ = 0;
      anchorY_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SpriteData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              x_ = input.readInt32();
              break;
            }
            case 16: {

              y_ = input.readInt32();
              break;
            }
            case 24: {

              textureX_ = input.readInt32();
              break;
            }
            case 32: {

              textureY_ = input.readInt32();
              break;
            }
            case 40: {

              width_ = input.readInt32();
              break;
            }
            case 48: {

              height_ = input.readInt32();
              break;
            }
            case 56: {

              anchorX_ = input.readInt32();
              break;
            }
            case 64: {

              anchorY_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.reis.game.resource.prototype.SpriteProto.SpriteData.class, com.reis.game.resource.prototype.SpriteProto.SpriteData.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>optional int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>optional int32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    public static final int TEXTUREX_FIELD_NUMBER = 3;
    private int textureX_;
    /**
     * <code>optional int32 textureX = 3;</code>
     */
    public int getTextureX() {
      return textureX_;
    }

    public static final int TEXTUREY_FIELD_NUMBER = 4;
    private int textureY_;
    /**
     * <code>optional int32 textureY = 4;</code>
     */
    public int getTextureY() {
      return textureY_;
    }

    public static final int WIDTH_FIELD_NUMBER = 5;
    private int width_;
    /**
     * <code>optional int32 width = 5;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 6;
    private int height_;
    /**
     * <code>optional int32 height = 6;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int ANCHORX_FIELD_NUMBER = 7;
    private int anchorX_;
    /**
     * <code>optional int32 anchorX = 7;</code>
     */
    public int getAnchorX() {
      return anchorX_;
    }

    public static final int ANCHORY_FIELD_NUMBER = 8;
    private int anchorY_;
    /**
     * <code>optional int32 anchorY = 8;</code>
     */
    public int getAnchorY() {
      return anchorY_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0) {
        output.writeInt32(1, x_);
      }
      if (y_ != 0) {
        output.writeInt32(2, y_);
      }
      if (textureX_ != 0) {
        output.writeInt32(3, textureX_);
      }
      if (textureY_ != 0) {
        output.writeInt32(4, textureY_);
      }
      if (width_ != 0) {
        output.writeInt32(5, width_);
      }
      if (height_ != 0) {
        output.writeInt32(6, height_);
      }
      if (anchorX_ != 0) {
        output.writeInt32(7, anchorX_);
      }
      if (anchorY_ != 0) {
        output.writeInt32(8, anchorY_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (y_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      if (textureX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, textureX_);
      }
      if (textureY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, textureY_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, width_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, height_);
      }
      if (anchorX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, anchorX_);
      }
      if (anchorY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, anchorY_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.reis.game.resource.prototype.SpriteProto.SpriteData)) {
        return super.equals(obj);
      }
      com.reis.game.resource.prototype.SpriteProto.SpriteData other = (com.reis.game.resource.prototype.SpriteProto.SpriteData) obj;

      boolean result = true;
      result = result && (getX()
          == other.getX());
      result = result && (getY()
          == other.getY());
      result = result && (getTextureX()
          == other.getTextureX());
      result = result && (getTextureY()
          == other.getTextureY());
      result = result && (getWidth()
          == other.getWidth());
      result = result && (getHeight()
          == other.getHeight());
      result = result && (getAnchorX()
          == other.getAnchorX());
      result = result && (getAnchorY()
          == other.getAnchorY());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
      hash = (37 * hash) + TEXTUREX_FIELD_NUMBER;
      hash = (53 * hash) + getTextureX();
      hash = (37 * hash) + TEXTUREY_FIELD_NUMBER;
      hash = (53 * hash) + getTextureY();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (37 * hash) + ANCHORX_FIELD_NUMBER;
      hash = (53 * hash) + getAnchorX();
      hash = (37 * hash) + ANCHORY_FIELD_NUMBER;
      hash = (53 * hash) + getAnchorY();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.reis.game.resource.prototype.SpriteProto.SpriteData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SpriteData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SpriteData)
        com.reis.game.resource.prototype.SpriteProto.SpriteDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.reis.game.resource.prototype.SpriteProto.SpriteData.class, com.reis.game.resource.prototype.SpriteProto.SpriteData.Builder.class);
      }

      // Construct using com.reis.game.resource.prototype.SpriteProto.SpriteData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0;

        y_ = 0;

        textureX_ = 0;

        textureY_ = 0;

        width_ = 0;

        height_ = 0;

        anchorX_ = 0;

        anchorY_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteData_descriptor;
      }

      public com.reis.game.resource.prototype.SpriteProto.SpriteData getDefaultInstanceForType() {
        return com.reis.game.resource.prototype.SpriteProto.SpriteData.getDefaultInstance();
      }

      public com.reis.game.resource.prototype.SpriteProto.SpriteData build() {
        com.reis.game.resource.prototype.SpriteProto.SpriteData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.reis.game.resource.prototype.SpriteProto.SpriteData buildPartial() {
        com.reis.game.resource.prototype.SpriteProto.SpriteData result = new com.reis.game.resource.prototype.SpriteProto.SpriteData(this);
        result.x_ = x_;
        result.y_ = y_;
        result.textureX_ = textureX_;
        result.textureY_ = textureY_;
        result.width_ = width_;
        result.height_ = height_;
        result.anchorX_ = anchorX_;
        result.anchorY_ = anchorY_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.reis.game.resource.prototype.SpriteProto.SpriteData) {
          return mergeFrom((com.reis.game.resource.prototype.SpriteProto.SpriteData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.reis.game.resource.prototype.SpriteProto.SpriteData other) {
        if (other == com.reis.game.resource.prototype.SpriteProto.SpriteData.getDefaultInstance()) return this;
        if (other.getX() != 0) {
          setX(other.getX());
        }
        if (other.getY() != 0) {
          setY(other.getY());
        }
        if (other.getTextureX() != 0) {
          setTextureX(other.getTextureX());
        }
        if (other.getTextureY() != 0) {
          setTextureY(other.getTextureY());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (other.getAnchorX() != 0) {
          setAnchorX(other.getAnchorX());
        }
        if (other.getAnchorY() != 0) {
          setAnchorY(other.getAnchorY());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.reis.game.resource.prototype.SpriteProto.SpriteData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.reis.game.resource.prototype.SpriteProto.SpriteData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int x_ ;
      /**
       * <code>optional int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>optional int32 x = 1;</code>
       */
      public Builder setX(int value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 x = 1;</code>
       */
      public Builder clearX() {
        
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>optional int32 y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>optional int32 y = 2;</code>
       */
      public Builder setY(int value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 y = 2;</code>
       */
      public Builder clearY() {
        
        y_ = 0;
        onChanged();
        return this;
      }

      private int textureX_ ;
      /**
       * <code>optional int32 textureX = 3;</code>
       */
      public int getTextureX() {
        return textureX_;
      }
      /**
       * <code>optional int32 textureX = 3;</code>
       */
      public Builder setTextureX(int value) {
        
        textureX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 textureX = 3;</code>
       */
      public Builder clearTextureX() {
        
        textureX_ = 0;
        onChanged();
        return this;
      }

      private int textureY_ ;
      /**
       * <code>optional int32 textureY = 4;</code>
       */
      public int getTextureY() {
        return textureY_;
      }
      /**
       * <code>optional int32 textureY = 4;</code>
       */
      public Builder setTextureY(int value) {
        
        textureY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 textureY = 4;</code>
       */
      public Builder clearTextureY() {
        
        textureY_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <code>optional int32 width = 5;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional int32 width = 5;</code>
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 width = 5;</code>
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>optional int32 height = 6;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 height = 6;</code>
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height = 6;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }

      private int anchorX_ ;
      /**
       * <code>optional int32 anchorX = 7;</code>
       */
      public int getAnchorX() {
        return anchorX_;
      }
      /**
       * <code>optional int32 anchorX = 7;</code>
       */
      public Builder setAnchorX(int value) {
        
        anchorX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 anchorX = 7;</code>
       */
      public Builder clearAnchorX() {
        
        anchorX_ = 0;
        onChanged();
        return this;
      }

      private int anchorY_ ;
      /**
       * <code>optional int32 anchorY = 8;</code>
       */
      public int getAnchorY() {
        return anchorY_;
      }
      /**
       * <code>optional int32 anchorY = 8;</code>
       */
      public Builder setAnchorY(int value) {
        
        anchorY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 anchorY = 8;</code>
       */
      public Builder clearAnchorY() {
        
        anchorY_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SpriteData)
    }

    // @@protoc_insertion_point(class_scope:SpriteData)
    private static final com.reis.game.resource.prototype.SpriteProto.SpriteData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.reis.game.resource.prototype.SpriteProto.SpriteData();
    }

    public static com.reis.game.resource.prototype.SpriteProto.SpriteData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpriteData>
        PARSER = new com.google.protobuf.AbstractParser<SpriteData>() {
      public SpriteData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SpriteData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpriteData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpriteData> getParserForType() {
      return PARSER;
    }

    public com.reis.game.resource.prototype.SpriteProto.SpriteData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpriteArrayDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SpriteArrayData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 textureX = 1;</code>
     */
    int getTextureX();

    /**
     * <code>optional int32 textureY = 2;</code>
     */
    int getTextureY();

    /**
     * <code>optional int32 numSprites = 3;</code>
     */
    int getNumSprites();

    /**
     * <code>optional .SpriteData spriteData = 4;</code>
     */
    boolean hasSpriteData();
    /**
     * <code>optional .SpriteData spriteData = 4;</code>
     */
    com.reis.game.resource.prototype.SpriteProto.SpriteData getSpriteData();
    /**
     * <code>optional .SpriteData spriteData = 4;</code>
     */
    com.reis.game.resource.prototype.SpriteProto.SpriteDataOrBuilder getSpriteDataOrBuilder();
  }
  /**
   * Protobuf type {@code SpriteArrayData}
   */
  public  static final class SpriteArrayData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SpriteArrayData)
      SpriteArrayDataOrBuilder {
    // Use SpriteArrayData.newBuilder() to construct.
    private SpriteArrayData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpriteArrayData() {
      textureX_ = 0;
      textureY_ = 0;
      numSprites_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SpriteArrayData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              textureX_ = input.readInt32();
              break;
            }
            case 16: {

              textureY_ = input.readInt32();
              break;
            }
            case 24: {

              numSprites_ = input.readInt32();
              break;
            }
            case 34: {
              com.reis.game.resource.prototype.SpriteProto.SpriteData.Builder subBuilder = null;
              if (spriteData_ != null) {
                subBuilder = spriteData_.toBuilder();
              }
              spriteData_ = input.readMessage(com.reis.game.resource.prototype.SpriteProto.SpriteData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spriteData_);
                spriteData_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteArrayData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteArrayData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.reis.game.resource.prototype.SpriteProto.SpriteArrayData.class, com.reis.game.resource.prototype.SpriteProto.SpriteArrayData.Builder.class);
    }

    public static final int TEXTUREX_FIELD_NUMBER = 1;
    private int textureX_;
    /**
     * <code>optional int32 textureX = 1;</code>
     */
    public int getTextureX() {
      return textureX_;
    }

    public static final int TEXTUREY_FIELD_NUMBER = 2;
    private int textureY_;
    /**
     * <code>optional int32 textureY = 2;</code>
     */
    public int getTextureY() {
      return textureY_;
    }

    public static final int NUMSPRITES_FIELD_NUMBER = 3;
    private int numSprites_;
    /**
     * <code>optional int32 numSprites = 3;</code>
     */
    public int getNumSprites() {
      return numSprites_;
    }

    public static final int SPRITEDATA_FIELD_NUMBER = 4;
    private com.reis.game.resource.prototype.SpriteProto.SpriteData spriteData_;
    /**
     * <code>optional .SpriteData spriteData = 4;</code>
     */
    public boolean hasSpriteData() {
      return spriteData_ != null;
    }
    /**
     * <code>optional .SpriteData spriteData = 4;</code>
     */
    public com.reis.game.resource.prototype.SpriteProto.SpriteData getSpriteData() {
      return spriteData_ == null ? com.reis.game.resource.prototype.SpriteProto.SpriteData.getDefaultInstance() : spriteData_;
    }
    /**
     * <code>optional .SpriteData spriteData = 4;</code>
     */
    public com.reis.game.resource.prototype.SpriteProto.SpriteDataOrBuilder getSpriteDataOrBuilder() {
      return getSpriteData();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (textureX_ != 0) {
        output.writeInt32(1, textureX_);
      }
      if (textureY_ != 0) {
        output.writeInt32(2, textureY_);
      }
      if (numSprites_ != 0) {
        output.writeInt32(3, numSprites_);
      }
      if (spriteData_ != null) {
        output.writeMessage(4, getSpriteData());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (textureX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, textureX_);
      }
      if (textureY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, textureY_);
      }
      if (numSprites_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, numSprites_);
      }
      if (spriteData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSpriteData());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.reis.game.resource.prototype.SpriteProto.SpriteArrayData)) {
        return super.equals(obj);
      }
      com.reis.game.resource.prototype.SpriteProto.SpriteArrayData other = (com.reis.game.resource.prototype.SpriteProto.SpriteArrayData) obj;

      boolean result = true;
      result = result && (getTextureX()
          == other.getTextureX());
      result = result && (getTextureY()
          == other.getTextureY());
      result = result && (getNumSprites()
          == other.getNumSprites());
      result = result && (hasSpriteData() == other.hasSpriteData());
      if (hasSpriteData()) {
        result = result && getSpriteData()
            .equals(other.getSpriteData());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + TEXTUREX_FIELD_NUMBER;
      hash = (53 * hash) + getTextureX();
      hash = (37 * hash) + TEXTUREY_FIELD_NUMBER;
      hash = (53 * hash) + getTextureY();
      hash = (37 * hash) + NUMSPRITES_FIELD_NUMBER;
      hash = (53 * hash) + getNumSprites();
      if (hasSpriteData()) {
        hash = (37 * hash) + SPRITEDATA_FIELD_NUMBER;
        hash = (53 * hash) + getSpriteData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.reis.game.resource.prototype.SpriteProto.SpriteArrayData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SpriteArrayData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SpriteArrayData)
        com.reis.game.resource.prototype.SpriteProto.SpriteArrayDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteArrayData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteArrayData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.reis.game.resource.prototype.SpriteProto.SpriteArrayData.class, com.reis.game.resource.prototype.SpriteProto.SpriteArrayData.Builder.class);
      }

      // Construct using com.reis.game.resource.prototype.SpriteProto.SpriteArrayData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        textureX_ = 0;

        textureY_ = 0;

        numSprites_ = 0;

        if (spriteDataBuilder_ == null) {
          spriteData_ = null;
        } else {
          spriteData_ = null;
          spriteDataBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.reis.game.resource.prototype.SpriteProto.internal_static_SpriteArrayData_descriptor;
      }

      public com.reis.game.resource.prototype.SpriteProto.SpriteArrayData getDefaultInstanceForType() {
        return com.reis.game.resource.prototype.SpriteProto.SpriteArrayData.getDefaultInstance();
      }

      public com.reis.game.resource.prototype.SpriteProto.SpriteArrayData build() {
        com.reis.game.resource.prototype.SpriteProto.SpriteArrayData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.reis.game.resource.prototype.SpriteProto.SpriteArrayData buildPartial() {
        com.reis.game.resource.prototype.SpriteProto.SpriteArrayData result = new com.reis.game.resource.prototype.SpriteProto.SpriteArrayData(this);
        result.textureX_ = textureX_;
        result.textureY_ = textureY_;
        result.numSprites_ = numSprites_;
        if (spriteDataBuilder_ == null) {
          result.spriteData_ = spriteData_;
        } else {
          result.spriteData_ = spriteDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.reis.game.resource.prototype.SpriteProto.SpriteArrayData) {
          return mergeFrom((com.reis.game.resource.prototype.SpriteProto.SpriteArrayData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.reis.game.resource.prototype.SpriteProto.SpriteArrayData other) {
        if (other == com.reis.game.resource.prototype.SpriteProto.SpriteArrayData.getDefaultInstance()) return this;
        if (other.getTextureX() != 0) {
          setTextureX(other.getTextureX());
        }
        if (other.getTextureY() != 0) {
          setTextureY(other.getTextureY());
        }
        if (other.getNumSprites() != 0) {
          setNumSprites(other.getNumSprites());
        }
        if (other.hasSpriteData()) {
          mergeSpriteData(other.getSpriteData());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.reis.game.resource.prototype.SpriteProto.SpriteArrayData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.reis.game.resource.prototype.SpriteProto.SpriteArrayData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int textureX_ ;
      /**
       * <code>optional int32 textureX = 1;</code>
       */
      public int getTextureX() {
        return textureX_;
      }
      /**
       * <code>optional int32 textureX = 1;</code>
       */
      public Builder setTextureX(int value) {
        
        textureX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 textureX = 1;</code>
       */
      public Builder clearTextureX() {
        
        textureX_ = 0;
        onChanged();
        return this;
      }

      private int textureY_ ;
      /**
       * <code>optional int32 textureY = 2;</code>
       */
      public int getTextureY() {
        return textureY_;
      }
      /**
       * <code>optional int32 textureY = 2;</code>
       */
      public Builder setTextureY(int value) {
        
        textureY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 textureY = 2;</code>
       */
      public Builder clearTextureY() {
        
        textureY_ = 0;
        onChanged();
        return this;
      }

      private int numSprites_ ;
      /**
       * <code>optional int32 numSprites = 3;</code>
       */
      public int getNumSprites() {
        return numSprites_;
      }
      /**
       * <code>optional int32 numSprites = 3;</code>
       */
      public Builder setNumSprites(int value) {
        
        numSprites_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 numSprites = 3;</code>
       */
      public Builder clearNumSprites() {
        
        numSprites_ = 0;
        onChanged();
        return this;
      }

      private com.reis.game.resource.prototype.SpriteProto.SpriteData spriteData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.reis.game.resource.prototype.SpriteProto.SpriteData, com.reis.game.resource.prototype.SpriteProto.SpriteData.Builder, com.reis.game.resource.prototype.SpriteProto.SpriteDataOrBuilder> spriteDataBuilder_;
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      public boolean hasSpriteData() {
        return spriteDataBuilder_ != null || spriteData_ != null;
      }
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      public com.reis.game.resource.prototype.SpriteProto.SpriteData getSpriteData() {
        if (spriteDataBuilder_ == null) {
          return spriteData_ == null ? com.reis.game.resource.prototype.SpriteProto.SpriteData.getDefaultInstance() : spriteData_;
        } else {
          return spriteDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      public Builder setSpriteData(com.reis.game.resource.prototype.SpriteProto.SpriteData value) {
        if (spriteDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spriteData_ = value;
          onChanged();
        } else {
          spriteDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      public Builder setSpriteData(
          com.reis.game.resource.prototype.SpriteProto.SpriteData.Builder builderForValue) {
        if (spriteDataBuilder_ == null) {
          spriteData_ = builderForValue.build();
          onChanged();
        } else {
          spriteDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      public Builder mergeSpriteData(com.reis.game.resource.prototype.SpriteProto.SpriteData value) {
        if (spriteDataBuilder_ == null) {
          if (spriteData_ != null) {
            spriteData_ =
              com.reis.game.resource.prototype.SpriteProto.SpriteData.newBuilder(spriteData_).mergeFrom(value).buildPartial();
          } else {
            spriteData_ = value;
          }
          onChanged();
        } else {
          spriteDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      public Builder clearSpriteData() {
        if (spriteDataBuilder_ == null) {
          spriteData_ = null;
          onChanged();
        } else {
          spriteData_ = null;
          spriteDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      public com.reis.game.resource.prototype.SpriteProto.SpriteData.Builder getSpriteDataBuilder() {
        
        onChanged();
        return getSpriteDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      public com.reis.game.resource.prototype.SpriteProto.SpriteDataOrBuilder getSpriteDataOrBuilder() {
        if (spriteDataBuilder_ != null) {
          return spriteDataBuilder_.getMessageOrBuilder();
        } else {
          return spriteData_ == null ?
              com.reis.game.resource.prototype.SpriteProto.SpriteData.getDefaultInstance() : spriteData_;
        }
      }
      /**
       * <code>optional .SpriteData spriteData = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.reis.game.resource.prototype.SpriteProto.SpriteData, com.reis.game.resource.prototype.SpriteProto.SpriteData.Builder, com.reis.game.resource.prototype.SpriteProto.SpriteDataOrBuilder> 
          getSpriteDataFieldBuilder() {
        if (spriteDataBuilder_ == null) {
          spriteDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.reis.game.resource.prototype.SpriteProto.SpriteData, com.reis.game.resource.prototype.SpriteProto.SpriteData.Builder, com.reis.game.resource.prototype.SpriteProto.SpriteDataOrBuilder>(
                  getSpriteData(),
                  getParentForChildren(),
                  isClean());
          spriteData_ = null;
        }
        return spriteDataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SpriteArrayData)
    }

    // @@protoc_insertion_point(class_scope:SpriteArrayData)
    private static final com.reis.game.resource.prototype.SpriteProto.SpriteArrayData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.reis.game.resource.prototype.SpriteProto.SpriteArrayData();
    }

    public static com.reis.game.resource.prototype.SpriteProto.SpriteArrayData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpriteArrayData>
        PARSER = new com.google.protobuf.AbstractParser<SpriteArrayData>() {
      public SpriteArrayData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SpriteArrayData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpriteArrayData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpriteArrayData> getParserForType() {
      return PARSER;
    }

    public com.reis.game.resource.prototype.SpriteProto.SpriteArrayData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpriteData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SpriteData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SpriteArrayData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SpriteArrayData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014sprite.proto\"\207\001\n\nSpriteData\022\t\n\001x\030\001 \001(\005" +
      "\022\t\n\001y\030\002 \001(\005\022\020\n\010textureX\030\003 \001(\005\022\020\n\010texture" +
      "Y\030\004 \001(\005\022\r\n\005width\030\005 \001(\005\022\016\n\006height\030\006 \001(\005\022\017" +
      "\n\007anchorX\030\007 \001(\005\022\017\n\007anchorY\030\010 \001(\005\"j\n\017Spri" +
      "teArrayData\022\020\n\010textureX\030\001 \001(\005\022\020\n\010texture" +
      "Y\030\002 \001(\005\022\022\n\nnumSprites\030\003 \001(\005\022\037\n\nspriteDat" +
      "a\030\004 \001(\0132\013.SpriteDataB/\n com.reis.game.re" +
      "source.prototypeB\013SpriteProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SpriteData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SpriteData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SpriteData_descriptor,
        new java.lang.String[] { "X", "Y", "TextureX", "TextureY", "Width", "Height", "AnchorX", "AnchorY", });
    internal_static_SpriteArrayData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SpriteArrayData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SpriteArrayData_descriptor,
        new java.lang.String[] { "TextureX", "TextureY", "NumSprites", "SpriteData", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
